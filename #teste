#Test


#Exercicio  70
#Implemente um algoritmo, em Python, de Aprendizado de Máquina para
#construir um algoritmo de rastreamento de objetos pela webcam.

import cv2

# Função para selecionar o objeto a ser rastreado
def selecionar_objeto(frame):
    bbox = cv2.selectROI("Selecione o objeto", frame, False)
    return bbox

# Captura de vídeo da webcam
cap = cv2.VideoCapture(0)

# Verifica se a webcam está funcionando corretamente
if not cap.isOpened():
    print("Erro ao abrir a webcam")
    exit()

# Leitura do primeiro frame
ret, frame = cap.read()

# Seleciona o objeto a ser rastreado
bbox = selecionar_objeto(frame)

# Inicializa o rastreador KCF
tracker = cv2.TrackerKCF_create()

# Inicializa o rastreamento
ok = tracker.init(frame, bbox)

while True:
    # Captura um novo frame
    ret, frame = cap.read()

    if not ret:
        break

    # Atualiza o rastreamento
    ok, bbox = tracker.update(frame)

    # Desenha a caixa delimitadora do objeto rastreado
    if ok:
        p1 = (int(bbox[0]), int(bbox[1]))
        p2 = (int(bbox[0] + bbox[2]), int(bbox[1] + bbox[3]))
        cv2.rectangle(frame, p1, p2, (0, 255, 0), 2)
    else:
        cv2.putText(frame, "Erro de rastreamento", (100,80), cv2.FONT_HERSHEY_SIMPLEX, 0.75,(0,0,255),2)

    # Mostra o frame com a caixa delimitadora
    cv2.imshow("Rastreamento de objetos", frame)

    # Sai do loop se a tecla 'q' for pressionada
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Libera os recursos
cap.release()
cv2.destroyAllWindows()
