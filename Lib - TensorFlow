Tensorflow:
import tensorflow as tf
from tensorflow.keras.datasets import mnist
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Flatten
from tensorflow.keras.optimizers import Adam
# Carregar e preparar o conjunto de dados MNIST
(mnist_train_images, mnist_train_labels),
(mnist_test_images, mnist_test_labels) =
mnist.load_data()
mnist_train_images, mnist_test_images =
mnist_train_images / 255.0, mnist_test_images / 255.0
# Construir o modelo de rede neural
model = Sequential([
Flatten(input_shape=(28, 28)), # Camada de entrada

(aplainamento da imagem 28x28)

Dense(128, activation='relu'), # Camada oculta com

128 neurônios

Dense(10, activation='softmax') # Camada de saída

com 10 neurônios (um para cada dígito)

])
# Compilar o modelo
model.compile(optimizer=Adam(),
loss='sparse_categorical_crossentropy',
metrics=['accuracy'])

# Treinar o modelo
model.fit(mnist_train_images, mnist_train_labels,

epochs=5)

# Avaliar o modelo
test_loss, test_accuracy =

model.evaluate(mnist_test_images, mnist_test_labels)
print('Acurácia no conjunto de teste:', test_accuracy)
